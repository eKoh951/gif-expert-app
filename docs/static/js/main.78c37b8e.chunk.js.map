{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEbC,mBAAS,IAFI,mBAE1CC,EAF0C,KAE9BC,EAF8B,KAiBjD,OACC,0BAAMC,SAVc,SAACC,GACrBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAe,SAAAS,GAAQ,OAAKP,GAAL,mBAAoBO,OAC3CN,EAAc,OAMd,2BACCO,KAAK,OACLC,MAAQT,EACRU,SAlBuB,SAACP,GAC1BF,EAAeE,EAAEQ,OAAOF,Y,uBCRbG,EAAO,uCAAG,WAAQL,GAAR,uBAAAM,EAAA,6DAChBC,EADgB,iDACiCC,UAAWR,GAD5C,+DAEJS,MAAOF,GAFH,cAEhBG,EAFgB,gBAGCA,EAAIC,OAHL,uBAGdC,EAHc,EAGdA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACtB,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATb,kBAafM,GAbe,4CAAH,sDCEPO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEzC,OACC,yBAAKc,UAAU,0CACb,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,2BAAKA,KCHIO,EAAU,SAAC,GAAkB,IAAhBxB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EACjBR,mBAAS,CAClCoB,KAAM,GACNa,SAAS,IAHiC,mBACpCC,EADoC,KAC7BC,EAD6B,KAmB3C,OAZAC,qBAAW,WACVvB,EAASL,GACP6B,MAAM,SAAAC,GAENH,EAAS,CACRf,KAAMkB,EACNL,SAAS,SAIV,CAACzB,IAEG0B,EDf0BK,CAAc/B,GAAlCkB,EAH2B,EAGhCN,KAAaa,EAHmB,EAGnBA,QAErB,OACC,oCACA,wBAAIJ,UAAU,qCAAsCrB,GAEjDyB,GAAW,uBAAGJ,UAAU,oCAAb,WAEb,yBAAKA,UAAU,aAEbH,EAAOJ,KAAK,SAAAC,GAAG,OACd,kBAAC,EAAD,eACCiB,IAAMjB,EAAIC,IACLD,UEcGkB,EA9BM,WAAM,MAEUzC,mBAAS,CAAC,cAFpB,mBAEnB0C,EAFmB,KAEP3C,EAFO,KAU1B,OACC,oCACC,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEC2C,EAAWpB,KAAI,SAACd,GAAD,OACd,kBAAC,EAAD,CACCA,SAAWA,EACXgC,IAAMhC,UCpBZmC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.78c37b8e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\r\n\tconst handleInputChange = (e) => {\r\n\t\tsetInputValue( e.target.value );\r\n\t}\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif( inputValue.trim().length > 2 ){\r\n\t\t\tsetCategories( category => [inputValue, ...category] );\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\t}\r\n \r\n\treturn (\r\n\t\t<form onSubmit={ handleSubmit }>\r\n\t\t\t<input \r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={ inputValue }\r\n\t\t\t\tonChange={ handleInputChange }\r\n\t\t\t/>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async ( category ) => {\r\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=10&api_key=3TNlsAMoOyU8l5LsFBYtkedGH8lYHUTd`;\r\n\tconst res = await fetch( url );\r\n\tconst { data } = await res.json();\r\n\r\n\tconst gifs = data.map( img => {\r\n\t\treturn {\r\n\t\t\tid: img.id,\r\n\t\t\ttitle: img.title,\r\n\t\t\turl: img.images.downsized_medium.url\r\n\t\t}\r\n\t})\r\n\r\n\treturn gifs;\t\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n\t\r\n\treturn (\r\n\t\t<div className=\"card animate__animated animate__fadeIn\">\r\n\t\t\t\t<img src={ url } alt={ title } />\r\n\t\t\t\t<p>{ title }</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\t// We rename data to images with data:images\r\n\tconst { data:images, loading } = useFetchGifs( category );\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t<h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\t\t\t\r\n\t\t\t{ loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n\t\t\t<div className=\"card-grid\">\r\n\t\t\t\t{\r\n\t\t\t\t\timages.map( img => (\r\n\t\t\t\t\t\t<GifGridItem \r\n\t\t\t\t\t\t\tkey={ img.id }\r\n\t\t\t\t\t\t\t{ ...img }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\tconst [state, setState] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true\r\n\t});\r\n\r\n\t\t// The useEffect hook helps to execute code only in certain changes of the component\r\n\tuseEffect( () => {\r\n\t\tgetGifs( category )\r\n\t\t\t.then( imgs => {\r\n\t\t\t\t\r\n\t\t\t\tsetState({\r\n\t\t\t\t\tdata: imgs,\r\n\t\t\t\t\tloading: false\r\n\t\t\t\t})\r\n\r\n\t\t\t});\r\n\t}, [category])\r\n\r\n\treturn state; // { data: [], loading: true }\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\t// const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n\tconst [categories, setCategories] = useState(['One Punch']);\r\n\r\n\t// const handleAdd = () => {\r\n\t// \t// setCategories(categories.concat('Kanojo')); //No es conveniente pues no asigna una Key al componente\r\n\t// \tsetCategories(['Kanojo', ...categories]);\r\n\t// \tconsole.log(categories);\r\n\t// }\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>GifExpertApp</h2>\r\n\t\t\t<AddCategory setCategories={ setCategories } />\r\n\t\t\t<hr />\r\n\r\n\t\t\t<ol>\r\n\t\t\t{\r\n\t\t\t\tcategories.map((category) => (\r\n\t\t\t\t\t<GifGrid\r\n\t\t\t\t\t\tcategory={ category }\r\n\t\t\t\t\t\tkey={ category }\r\n\t\t\t\t\t/>\r\n\t\t\t\t))\r\n\t\t\t}\r\n \t\t\t</ol>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}